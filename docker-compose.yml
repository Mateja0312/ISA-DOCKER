version: "3.9"

services:

  cli:
    build:
      context: client
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    volumes:
      - app_data:/var/lib/mysql

  mysql_server:
    image: mysql:8.0
    environment:
      - MYSQL_DATABASE=ISA2022 #$${DB_NAME} #
      # - MYSQL_USER=$${DB_USERNAME}
      # - MYSQL_PASSWORD=$${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=LOZINKA #$${DB_PASSWORD} #
    env_file:
      - ./server/.env
    ports:
      - 3306:3306
    healthcheck:
      # test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      test: ["CMD-SHELL", "mysql --protocol=TCP -uroot -p$${MYSQL_ROOT_PASSWORD} -hlocalhost -e 'SELECT 1;' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30
    volumes:
      - app_data:/var/lib/mysql
    # The above healthcheck configuration defines a test that verifies that the MySQL database is fully initialized and ready to accept connections.

  app:
    build:
      context: server
      dockerfile: Dockerfile
    ports:
      - 8081:8081
    depends_on:
      mysql_server:
        condition: service_healthy
    # The above depends_on configuration specifies that the app container should only start when the MySQL container is healthy.
  
  mailcatcher:
    restart: on-failure
    image: dockage/mailcatcher:0.8.2
    ports:
    - "1080:1080" # access mailcatcher on localhost:1080
    - "1025:1025" # catching packages on port 1025
  
volumes:
  app_data: